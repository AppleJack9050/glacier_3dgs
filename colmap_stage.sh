#!/usr/bin/env bash
set -euo pipefail

# ============================================================
# COLMAP sparse reconstruction + undistortion (keep only images)
# Layout inside SCENE_DIR:
#   image/        -> raw input images (you put images here)
#   image_2/      -> undistorter writes here; we keep ONLY files from image_2/images/*
#   sparse/       -> mapper outputs (binary models, e.g., 0/, 1/, ...)
#   database.db   -> COLMAP database
#
# Post-step behavior:
# - Move ALL files from image_2/images/ directly into image_2/
# - Remove everything else generated by undistorter (sparse/, cameras.txt, images.txt, points3D.txt, empty images/)
#
# Notes:
# - Exhaustive matcher is used.
# - You can set OVERWRITE=1 to clean previous outputs.
# - You can override colmap binary via COLMAP_BIN=/path/to/colmap
# ============================================================

# ---------------- Config ----------------
SCENE_DIR="$1"
COLMAP_BIN="${COLMAP_BIN:-colmap}"
OVERWRITE="${OVERWRITE:-0}"

# ---------------- Paths -----------------
IMG_DIR="$SCENE_DIR/image"      # input images
OUT_DIR="$SCENE_DIR/image_2"    # undistorter output root
SPARSE_DIR="$SCENE_DIR/sparse"  # mapper output (binary reconstructions)
DB_PATH="$SCENE_DIR/database.db"

# ---------------- Helpers ----------------
info(){ echo -e "\033[1;32m[INFO]\033[0m $*"; }
warn(){ echo -e "\033[1;33m[WARN]\033[0m $*"; }
err(){  echo -e "\033[1;31m[ERR ]\033[0m $*"; }

# ---------------- Preflight ----------------
mkdir -p "$IMG_DIR" "$OUT_DIR" "$SPARSE_DIR"

command -v "$COLMAP_BIN" >/dev/null 2>&1 || { err "COLMAP not found: $COLMAP_BIN"; exit 1; }
[[ -d "$IMG_DIR" ]] || { err "Raw image dir not found: $IMG_DIR"; exit 1; }

shopt -s nullglob
num_imgs=("$IMG_DIR"/*)
if [[ ${#num_imgs[@]} -eq 0 ]]; then
  err "No images in $IMG_DIR"; exit 1
fi
shopt -u nullglob

if [[ "$OVERWRITE" == "1" ]]; then
  info "OVERWRITE=1 -> removing old artifacts"
  rm -f "$DB_PATH"
  rm -rf "$SPARSE_DIR"
  mkdir -p "$SPARSE_DIR"
  # Keep OUT_DIR but clear previous undistorter artifacts
  rm -rf "$OUT_DIR/images" "$OUT_DIR/sparse" \
         "$OUT_DIR/cameras.txt" "$OUT_DIR/images.txt" "$OUT_DIR/points3D.txt"
  # Also remove any stray files in OUT_DIR root (only keep OUT_DIR itself)
  find "$OUT_DIR" -mindepth 1 -maxdepth 1 -type f -delete || true
fi

info "Scene dir   : $SCENE_DIR"
info "Input imgs  : $IMG_DIR"
info "Database    : $DB_PATH"
info "Sparse out  : $SPARSE_DIR"
info "Undistort   : $OUT_DIR  (COLMAP will create: $OUT_DIR/images and $OUT_DIR/sparse)"

# ---------------- Step 1: Feature extraction ----------------
info "COLMAP: feature_extractor..."
"$COLMAP_BIN" feature_extractor \
  --database_path "$DB_PATH" \
  --image_path "$IMG_DIR"

# ---------------- Step 2: Exhaustive matching ----------------
info "COLMAP: exhaustive_matcher..."
"$COLMAP_BIN" exhaustive_matcher \
  --database_path "$DB_PATH"

# ---------------- Step 3: Sparse reconstruction (mapper) -----
info "COLMAP: mapper (sparse reconstruction)..."
"$COLMAP_BIN" mapper \
  --database_path "$DB_PATH" \
  --image_path "$IMG_DIR" \
  --output_path "$SPARSE_DIR"

if [[ ! -d "$SPARSE_DIR/0" ]]; then
  err "No reconstruction found at $SPARSE_DIR/0. Check mapper logs."; exit 1
fi

# ---------------- Step 4: Undistortion -----------------------
info "COLMAP: image_undistorter -> $OUT_DIR ..."
"$COLMAP_BIN" image_undistorter \
  --image_path "$IMG_DIR" \
  --input_path "$SPARSE_DIR/0" \
  --output_path "$OUT_DIR" \
  --output_type COLMAP \
  --max_image_size 2000

# ---------------- Post-process undistorter output ------------
# We ONLY want files from $OUT_DIR/images/* to end up directly under $OUT_DIR/.
# Everything else (sparse/, text model files, empty images/) will be removed.

# Ensure images/ exists; if not, something went wrong.
if [[ ! -d "$OUT_DIR/images" ]]; then
  err "Expected folder not found: $OUT_DIR/images"; exit 1
fi

info "Moving undistorted images up to: $OUT_DIR/"
# Use rsync to be robust to subfolders; then remove sources.
# -a preserves timestamps; --remove-source-files removes files afterwards.
# Trailing slashes: copy CONTENTS of images/ into OUT_DIR/.
rsync -a --remove-source-files "$OUT_DIR/images/" "$OUT_DIR/" || true

# Remove any now-empty directories inside images/
find "$OUT_DIR/images" -type d -empty -delete || true
# Remove the (now mostly empty) images/ folder itself if empty
rmdir "$OUT_DIR/images" 2>/dev/null || true

info "Cleaning extra undistorter artifacts..."
rm -rf "$OUT_DIR/sparse" \
       "$OUT_DIR/cameras.txt" \
       "$OUT_DIR/images.txt" \
       "$OUT_DIR/points3D.txt"

# Safety: if any non-image artifacts remain in OUT_DIR root (unlikely), remove known text files again.
# Keep only files (images) at $OUT_DIR root as requested.

info "Done."
info "Raw images            : $IMG_DIR"
info "Database              : $DB_PATH"
info "Sparse (binary)       : $SPARSE_DIR  (models: 0/, 1/, ...)"
info "Undistorted images    : $OUT_DIR/   (ONLY undistorted image files kept)"
